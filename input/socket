forall (k : i -> i). 
  Untracked (Socket k) <= Ready (k S);
forall (k : i -> i).
  Untracked (Socket k) <= Untracked (k U);
forall (k : i -> i).
  Ready (Socket k) <= Ready (k U);
forall (k : i -> i).
  Bound (Socket k) <= Bound (k U);
forall (k : i -> i).
  Listening (Socket k) <= Listening (k U);
forall (k : i -> i).
  Open (Socket k) <= Open (k U);
forall (k : i -> i).
  Close (Socket k) <= Close (k U);

forall (soc : i) (k : i). 
  Untracked (Bind k soc) <= Untracked k;
forall (soc : i) (k : i). 
  Ready (Bind k soc) <= IsU soc /\ Ready k;
forall (soc : i) (k : i). 
  Ready (Bind k soc) <= IsS soc /\ Bound k;
forall (soc : i) (k : i). 
  Bound (Bind k soc) <= IsU soc /\ Bound k;
forall (soc : i) (k : i). 
  Bound (Bind k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Listening (Bind k soc) <= IsU soc /\ Listening k;
forall (soc : i) (k : i). 
  Listening (Bind k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Open (Bind k soc) <= IsU soc /\ Open k;
forall (soc : i) (k : i). 
  Open (Bind k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Close (Bind k soc) <= IsU soc /\ Close k;
forall (soc : i) (k : i). 
  Close (Bind k soc) <= IsS soc;

forall (soc : i) (k : i). 
  Untracked (Connect k soc) <= Untracked k;
forall (soc : i) (k : i). 
  Ready (Connect k soc) <= IsU soc /\ Ready k;
forall (soc : i) (k : i). 
  Ready (Connect k soc) <= IsS soc /\ Open k;
forall (soc : i) (k : i). 
  Bound (Connect k soc) <= IsU soc /\ Bound k;
forall (soc : i) (k : i). 
  Bound (Connect k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Listening (Connect k soc) <= IsU soc /\ Listening k;
forall (soc : i) (k : i). 
  Listening (Connect k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Open (Connect k soc) <= IsU soc /\ Open k;
forall (soc : i) (k : i). 
  Open (Connect k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Close (Connect k soc) <= IsU soc /\ Close k;
forall (soc : i) (k : i). 
  Close (Connect k soc) <= IsS soc;

forall (soc : i) (k : i). 
  Untracked (Listen k soc) <= Untracked k;
forall (soc : i) (k : i). 
  Ready (Listen k soc) <= IsU soc /\ Ready k;
forall (soc : i) (k : i). 
  Ready (Listen k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Bound (Listen k soc) <= IsU soc /\ Bound k;
forall (soc : i) (k : i). 
  Bound (Listen k soc) <= IsS soc /\ Listening k;
forall (soc : i) (k : i). 
  Listening (Listen k soc) <= IsU soc /\ Listening k;
forall (soc : i) (k : i). 
  Listening (Listen k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Open (Listen k soc) <= IsU soc /\ Open k;
forall (soc : i) (k : i). 
  Open (Listen k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Close (Listen k soc) <= IsU soc /\ Close k;
forall (soc : i) (k : i). 
  Close (Listen k soc) <= IsS soc;

forall (soc : i) (k : i -> i). 
  Untracked (Accept k soc) <= Untracked (k U);
forall (soc : i) (k : i -> i). 
  Untracked (Accept k soc) <= Open (k S);
forall (soc : i) (k : i -> i). 
  Ready (Accept k soc) <= IsU soc;
forall (soc : i) (k : i -> i). 
  Bound (Accept k soc) <= IsU soc /\ Bound (k U);
forall (soc : i) (k : i -> i). 
  Bound (Accept k soc) <= IsS soc;
forall (soc : i) (k : i -> i). 
  Listening (Accept k soc) <= IsU soc /\ Listening (k U);
forall (soc : i) (k : i -> i). 
  Listening (Accept k soc) <= IsS soc /\ Listening (k U);
forall (soc : i) (k : i -> i). 
  Open (Accept k soc) <= IsU soc /\ Open (k U);
forall (soc : i) (k : i -> i). 
  Open (Accept k soc) <= IsS soc;
forall (soc : i) (k : i -> i). 
  Close (Accept k soc) <= IsU soc /\ Close (k U);
forall (soc : i) (k : i -> i). 
  Close (Accept k soc) <= IsS soc;

forall (soc : i) (k : i). 
  Untracked (Send k soc) <= Untracked k;
forall (soc : i) (k : i). 
  Ready (Send k soc) <= IsU soc /\ Ready k;
forall (soc : i) (k : i). 
  Ready (Send k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Bound (Send k soc) <= IsU soc /\ Bound k;
forall (soc : i) (k : i). 
  Bound (Send k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Listening (Send k soc) <= IsU soc /\ Listening k;
forall (soc : i) (k : i). 
  Listening (Send k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Open (Send k soc) <= IsU soc /\ Open k;
forall (soc : i) (k : i). 
  Open (Send k soc) <= IsS soc /\ Open k;
forall (soc : i) (k : i). 
  Close (Send k soc) <= IsU soc /\ Close k;
forall (soc : i) (k : i). 
  Close (Send k soc) <= IsS soc;

forall (soc : i) (k : i). 
  Untracked (Receive k soc) <= Untracked k;
forall (soc : i) (k : i). 
  Ready (Receive k soc) <= IsU soc /\ Ready k;
forall (soc : i) (k : i). 
  Ready (Receive k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Bound (Receive k soc) <= IsU soc /\ Bound k;
forall (soc : i) (k : i). 
  Bound (Receive k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Listening (Receive k soc) <= IsU soc /\ Listening k;
forall (soc : i) (k : i). 
  Listening (Receive k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Open (Receive k soc) <= IsU soc /\ Open k;
forall (soc : i) (k : i). 
  Open (Receive k soc) <= IsS soc /\ Open k;
forall (soc : i) (k : i). 
  Close (Receive k soc) <= IsU soc /\ Close k;
forall (soc : i) (k : i). 
  Close (Receive k soc) <= IsS soc;

forall (soc : i) (k : i). 
  Untracked (Close k soc) <= Untracked k;
forall (soc : i) (k : i). 
  Ready (Close k soc) <= IsU soc /\ Ready k;
forall (soc : i) (k : i). 
  Ready (Close k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Bound (Close k soc) <= IsU soc /\ Bound k;
forall (soc : i) (k : i). 
  Bound (Close k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Listening (Close k soc) <= IsU soc /\ Listening k;
forall (soc : i) (k : i). 
  Listening (Close k soc) <= IsS soc;
forall (soc : i) (k : i). 
  Open (Close k soc) <= IsU soc /\ Open k;
forall (soc : i) (k : i). 
  Open (Close k soc) <= IsS soc /\ Close k;
forall (soc : i) (k : i). 
  Close (Close k soc) <= IsU soc /\ Close k;
forall (soc : i) (k : i). 
  Close (Close k soc) <= IsS soc;

forall (k1 : i) (k2 : i). 
  Untracked (Branch k1 k2) <= Untracked k1;
forall (k1 : i) (k2 : i). 
  Untracked (Branch k1 k2) <= Untracked k2;
forall (k1 : i) (k2 : i). 
  Ready (Branch k1 k2) <= Ready k1;
forall (k1 : i) (k2 : i). 
  Ready (Branch k1 k2) <= Ready k2;
forall (k1 : i) (k2 : i). 
  Bound (Branch k1 k2) <= Bound k1;
forall (k1 : i) (k2 : i). 
  Bound (Branch k1 k2) <= Bound k2;
forall (k1 : i) (k2 : i). 
  Listening (Branch k1 k2) <= Listening k1;
forall (k1 : i) (k2 : i). 
  Listening (Branch k1 k2) <= Listening k2;
forall (k1 : i) (k2 : i). 
  Close (Branch k1 k2) <= Close k1;
forall (k1 : i) (k2 : i). 
  Close (Branch k1 k2) <= Close k2;
forall (k1 : i) (k2 : i). 
  Open (Branch k1 k2) <= Open k1;
forall (k1 : i) (k2 : i). 
  Open (Branch k1 k2) <= Open k2;

IsS  S;
IsU  U;